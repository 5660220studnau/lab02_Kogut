<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>